import pandas as pd
from pyproj import Proj
import folium
from streamlit_folium import st_folium
import streamlit as st
import json
from .pages import *
import glob


# Funci√≥n para mostrar el encabezado con im√°genes
# Funci√≥n para mostrar el encabezado con la imagen en la esquina superior izquierda
def show_header(image):
    col1, col2 = st.columns([1, 4])  # La columna de la imagen es 1/5 del ancho, la del texto es 4/5

    with col1:
        st.image(image, width=100)  # Imagen en la esquina superior izquierda

    with col2:
        st.title("An√°lisis de CO‚ÇÇ en Puntos de Recolecci√≥n")  # Texto de encabezado
        st.markdown("---")  # L√≠nea divisoria debajo del t√≠tulo

# Funci√≥n para mostrar el texto en la columna izquierda
def show_description():
    st.subheader("Descripci√≥n del Proyecto")
    st.write("""
        Este mapa muestra los puntos de recolecci√≥n de datos de CO‚ÇÇ en una zona espec√≠fica. 
        La cuadr√≠cula azul indica el promedio de CO‚ÇÇ en distintas √°reas geogr√°ficas.
        Los valores de CO‚ÇÇ se expresan en **gm-2-d-1**.
    """)
    st.write("""
        Usa el cursor para interactuar con los marcadores y ver los valores exactos.
    """)

#TODO: Columna deprecada
# def columna_navegacion():
#     # Men√∫ en la barra lateral
#     # st.sidebar.title("üìö Inventario de emisiones")
#     # st.sidebar.write("**Selecciona un m√≥dulo:**")
#     # st.sidebar.write("- Descripci√≥n del proyecto")
#     # st.sidebar.write("- Modulo 1: Datos")

    
#     # Men√∫ en la barra lateral
#     st.sidebar.title("Inventario de emisiones")
#     section = st.sidebar.radio("Selecciona un m√≥dulo:", 
#                             ["Descripci√≥n del proyecto", 
#                              "Modulo 1: Datos Nacionales",])

#     # Contenido basado en la selecci√≥n
#     if section == "Descripci√≥n del proyecto":
#         st.header("Descripci√≥n del proyecto")
#         st.write("Aqu√≠ va una descripci√≥n del curso...")
        
#     elif section == "Modulo 1: Datos Nacionales":
#         st.header("Module 1: Datos")
#         st.write("Contenido de la introducci√≥n y los prerrequisitos...")
#         show_country()

# Funci√≥n para cambiar de p√°gina
def go_to_page(page_name):
    st.session_state["page"] = page_name



def definir_pagina_actual():
    titulo = "Inventario nacional de emisiones de CO"

    # Mostrar √≠cono como bot√≥n para cambiar de p√°gina
    st.sidebar.title(titulo)
    st.sidebar.button("Descripci√≥n del proyecto", on_click=go_to_page, args=("Inicio",))
    st.sidebar.button("Modulo 1. Datos nacionales", on_click=go_to_page, args=("Acerca de",))
    st.sidebar.button("Redirecci√≥n a los mapas", on_click=go_to_page, args=("Mapas",))
    
    
    
def contenido_principal():
    st.title("Cat√°logo nacional de emisiones de CO2")
    st.header("UNAM: Universidad Nacional Aut√≥noma de M√©xico.")
    st.subheader("Instituto de Geof√≠sica. Departamento de Recursos Nacionales.")
    st.text("""
            Descripci√≥n completa del proyecto
            """)
    
    

def listado_mapas():
    # Leer todos los csv convertidos en latitud y longitud
    # Especificar el directorio y tipo de archivo
    csv_archivos = glob.glob("data\processed\*.csv")
    
    # Crear diccionario con nombre/df de datos
    # Leer cada ruta de archivo y convertirlo a un DafaFrame
    dataframes = [pd.read_csv(file) for file in csv_archivos]
    
    # Unir en un diccionario ambas listas de elementos
    mapas_completos = dict(zip(csv_archivos, dataframes))
    
    # Funcion para crear las paginas con parametro de definicion
    st.title("Listado completo de mapas")
    
    st.markdown("### Seleccione un Mapa")
    for nombre, datos in mapas_completos.items():
        with st.container():
            st.button(nombre[17:-10],  on_click=go_to_page, args=(str(nombre[17:-10]),))
            
def encabezado_mapa_individual(zona):
    st.title(f"Informaci√≥n de zona: {zona}")
    st.text("""
            Este mapa despliega la localizaci√≥n de las muestras tomadas as√≠ como el valor medido.
            """)
        
        